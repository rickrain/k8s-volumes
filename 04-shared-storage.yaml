apiVersion: v1
kind: PersistentVolume
metadata:
  name: task-pv-volume
  labels:
    usage: file-storage
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  azureFile:
    secretName: azure-storage
    shareName: data
    readOnly: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: file-storage-claim
  # Set this annotation to NOT let Kubernetes automatically create
  # a persistent volume for this volume claim.
  annotations:
    volume.beta.kubernetes.io/storage-class: ""
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  selector:
    # To make sure we match the claim with the exact volume, match the label
    matchLabels:
      usage: file-storage
---
apiVersion: v1
kind: Service
metadata:
  name: volumes-lb
spec:
  type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shared-storage
spec:
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.14.2
        ports:
        - containerPort: 80
        volumeMounts:
          - name: html
            mountPath: /usr/share/nginx/html
            readOnly: true
      - name: index-html-producer
        image: nginx:1.14.2
        command: [ 'sh', '-c', 'echo "<p>hello from $HOSTNAME</p>" >> /usr/share/nginx/html/index.html && tail -f /dev/null' ]
        volumeMounts:
          - name: html
            mountPath: /usr/share/nginx/html
            readOnly: false
      volumes:
        - name: html
          persistentVolumeClaim:
            claimName: file-storage-claim

